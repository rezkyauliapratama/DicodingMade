apply plugin: 'com.android.application'
apply from: "${rootProject.projectDir}/flavors.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion Release.compileSdkVersion

    defaultConfig {
        applicationId "id.rezkyauliapratama.dicodingmade.favoriteapp"
        minSdkVersion Release.minSdkVersion
        targetSdkVersion Release.targetSdkVersion
        versionCode Release.versionCode
        versionName Release.versionName
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    with flavorConfig
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(Modules.libCore)
    implementation project(Modules.libShareData)
    implementation project(Modules.libNavigation)

    //support
    implementation Dependencies.kotlin
    implementation Support.appCompat
    implementation Support.core
    implementation Support.constraintLayout
    implementation Support.materialComponent
    api Arch.navigationFragment
    api Arch.navigationKtx
    implementation Support.lifeCycleExtensions

    //network
    implementation Retrofit.retrofit
    implementation Retrofit.moshiConverter
    implementation Retrofit.adapterRxJava
    implementation Retrofit.loggingInterceptor
    implementation Json.moshiKotlin

    //reactivex
    implementation Reactivex.kotlin
    implementation Reactivex.android

    //Dagger2
    implementation Dagger.dagger
    kapt Dagger.daggerCompiler

    //unittest
    testImplementation TestLibs.junit
    androidTestImplementation TestLibs.testRunner

    //Logger
    implementation Log.timber

    //shimmer
    implementation Facebook.shimmer

    implementation Image.glide
    kapt Image.glideCompiler

    implementation Scheduler.workManager
}
